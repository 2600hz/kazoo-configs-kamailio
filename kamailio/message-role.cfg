modparam("htable", "htable", "msg=>size=32;autoexpire=60;")

route[HANDLE_MESSAGE]
{
    if (!is_method("MESSAGE")) return;

    xlog("L_INFO", "$ci|log|MESSAGE from $fu to $tu\n");
    if (isflagset(FLAG_INTERNALLY_SOURCED) || src_ip == myself) {
        xlog("L_INFO", "$ci| routing MESSAGE to external from $fu to $tu\n");
        if (registered("location")) {
           lookup("location");
           xlog("L_INFO", "$ci|log|routing to $ruid\n");
        } else {
           xlog("L_INFO", "$ci|end|user is not registered\n");
           append_to_reply("$def(AOR_NOT_SUBSCRIBED_REASON)\r\n");
           sl_send_reply("410", "Not registered");
           exit;
        }
    } else {
        route(AUTH);
        $xavp(regcfg=>match_received) = $su;
        if($avp(is_registred) != "true") {
           sl_send_reply("403", "Forbidden");
           exit;
        } else {
            if($hdr(Content-Type) == "text/plain") {
               route(MESSAGE_INBOUND);
            } else {
               xlog("L_WARN", "$ci|end|dropping MESSAGE $hdr(Content-Type)\n");
               sl_send_reply("200", "OK");
               exit;
            }
        }
    }
}

route[MESSAGE_INBOUND]
{
    route(AUTH_HEADERS_JSON);
    $var(Payload) = $_s({"Event-Category" : "message", "Event-Name" : "inbound", "Call-ID" : "$ci", "Message-ID" : "$ci", "Route-Type" : "on-net", "Route-ID" : "sip", "From" : "$fU@$fd", "To" : "$tU@$td", "Request" : "$rU@$rd", "Caller-ID-Number" : "$fU", "Callee-ID-Number" : "$tU", "Body" : "$rb", "Custom-SIP-Headers" : $var(headers_json), "Msg-ID" : "$uuid(g)"});

    $var(exchange) = "sms";
    $var(RoutingKey) = $_s(message.inbound.sip.$(ci{kz.encode}));
    xlog("L_INFO", "$ci|msg|sending inbound message $var(RoutingKey) => $var(Payload)\n");
    kazoo_publish($var(exchange), $var(RoutingKey), $var(Payload));
    sl_send_reply("200", "OK");
    exit;

}

event_route[kazoo:consumer-event-message-route]
{
    $var(uri_username) = "";
    kazoo_json($kzE, "Endpoints[0].To-Username", "$var(uri_username)");
    $var(x) = $(kzE{kz.json,Endpoints[0].To-Username});
    xlog("L_INFO", "received message route for $(kzE{kz.json,Endpoints[0].To-DID})\n");
    if( $var(uri_username) != "" ) {
        $var(from_uri) = "sip:" + $(kzE{kz.json,Caller-ID-Number}) + "@" + $(kzE{kz.json,Endpoints[0].To-Realm});
        $var(to_uri) = "sip:" + $(kzE{kz.json,Endpoints[0].To-Username}) + "@" + $(kzE{kz.json,Endpoints[0].To-Realm});
    } else {
        $var(from_uri) = "sip:" + $(kzE{kz.json,Caller-ID-Number}) + $(kzE{kz.json,Endpoints[0].To-Realm});
        $var(to_uri) = $(kzE{kz.json,Endpoints[0].Route});
    }
    $sht(msg=>$(kzE{kz.json,Call-ID})) = $kzE;
    $uac_req(method)="MESSAGE";
    $uac_req(body)= $(kzE{kz.json,Body});
    $uac_req(hdrs)="X-KAZOO-AOR: " + $var(to_uri)+ "\r\nContent-Type: text/plain\r\n";
    $uac_req(turi) = $var(to_uri);
    $uac_req(ruri) = $var(to_uri);
    $uac_req(furi) = $var(from_uri);
    $uac_req(ouri) = "sip:MY_IP_ADDRESS:5060";
    $uac_req(callid) = $(kzE{kz.json,Call-ID});
    xlog("L_INFO", "sending message from $var(from_uri) to $var(to_uri) \n");
    uac_req_send();
}

route[MESSAGE_REPLY]
{
    if( $(sht(msg=>$ci)) == $null) {
        exit();
    }

    if($T_reply_code != 200 && $T_reply_code != 202) {
        $var(Result) = "Failure";
    } else {
        $var(Result) = "Success";
    }

    $var(Payload) = $_s({ "Event-Category" : "message", "Event-Name" : "delivery",  "Call-ID" : "$(sht(msg=>$ci){kz.json,Call-ID})", "Message-ID" : "$(sht(msg=>$ci){kz.json,Message-ID})" , "Delivery-Result-Code" : "sip:$T_reply_code", "Msg-ID" : "$(sht(msg=>$ci){kz.json,Msg-ID})" , "Status" : "$var(Result)"});

    $var(RoutingKey) = $(sht(msg=>$ci){kz.json,Server-ID});
    $var(exchange) = "targeted";
    if($var(RoutingKey) == "") {
        $var(exchange) = "sms";
        $var(RoutingKey) = "message.delivery." + $(sht(msg=>$ci){kz.json,Call-ID}{kz.encode});
    }
    xlog("L_INFO", "sending delivery message for $ci\n");
    kazoo_publish($var(exchange), $var(RoutingKey), $var(Payload));
}

route[MESSAGE_BINDINGS]
{
    $var(key) = "kamailio@MY_HOSTNAME";
    $var(payload) = $_s({"name": "sms", "exchange": "sms", "type": "topic", "queue": "MSG-QUEUE-MY_HOSTNAME", "routing": "message.route.$(var(key){kz.encode}).*", "no_ack": false });
    kazoo_subscribe("$var(payload)");
}

# vim: tabstop=4 softtabstop=4 shiftwidth=4 expandtab
